initSidebarItems({"constant":[["AFFINE_TRANSFORM_F64","A block of data representing a 3x3 transformation matrix. It has the structure: `{ matrix: [[BE_F64; 3]; 3] }`"],["BE_DIMS_F32","A block of data representing 2D dimensions with 32-bit big-endian floating point width and height. It has the structure: `{ width: BE_F32, height: BE_F32 }`"],["BE_F32","A big-endian 32-bit floating point value (`IEEE754`)."],["BE_F64","A big-endian 64-bit floating point value (`IEEE754`)."],["BE_I16","A big-endian 16-bit signed integer."],["BE_I32","A big-endian 32-bit signed integer."],["BE_I64","A big-endian 64-bit signed integer."],["BE_POINT_F32","A block of data representing a two dimensional (2D) point with 32-bit big-endian floating point x and y coordinates. It has the structure: `{ BE_F32 x; BE_F32 y; }`"],["BE_RECT_F32","A block of data representing a 2D rectangle with 32-bit big-endian floating point x and y coordinates and a 32-bit big-endian floating point width and height size. It has the structure: `{ x: BE_F32, y: BE_F32, width: BE_F32, height: BE_F32 }` or the equivalent structure: `{ origin: BE_Point_F32, size: BE_DIMS_F32 }`"],["BE_SIGNED","A big-endian signed integer in 1,2,3 or 4 bytes."],["BE_U16","A big-endian 16-bit unsigned integer."],["BE_U32","A big-endian 32-bit unsigned integer."],["BE_U64","A big-endian 64-bit unsigned integer."],["BE_UNSIGNED","A big-endian unsigned integer in 1,2,3 or 4 bytes."],["BMP","Windows bitmap format graphics."],["I8","An 8-bit signed integer."],["JPEG","JPEG in a JFIF wrapper."],["PNG","PNG in a PNG wrapper."],["QT_META","QuickTime Metadata atom."],["RESERVED","Reserved for use where no type needs to be indicated."],["U8","An 8-bit unsigned integer."],["UTF16","UTF-16 also known as UTF-16BE."],["UTF16_SORT","UTF-16 variant storage of a string for sorting only."],["UTF8","UTF-8 without any count or NULL terminator."],["UTF8_SORT","UTF-8 variant storage of a string for sorting only."]],"enum":[["Data","An enum that holds different types of data defined by Table 3-5 Well-known data types."]],"fn":[["read_u32","Attempts to read a 32 bit unsigned integer from the reader."],["read_u8_vec","Attempts to read 8 bit unsigned integers from the reader to a vector of size length."],["read_utf16","Attempts to read a utf-16 string from the reader."],["read_utf8","Attempts to read a utf-8 string from the reader."]],"struct":[["DataT","A template used for parsing data defined by Table 3-5 Well-known data types."]]});